#!/bin/bash

# while cmd; do 
# 	body
# done
# 
# cat file | while read line; do 
# 	body
# done

if [[ ! -f ~/ssa-input.txt ]]; then
	echo "The file that should be parsed doesn't exist"
	exit 1
fi

current_array=""
current_disk=""
current_temperature=""
max_temperature=""

function reset_variables(){
	current_disk=""
	current_temperature=""
	max_temperature=""
}

function print_current_drive(){
	if [[ -n "${current_array}" && -n "${current_disk}" &&  -n "${current_temperature}" \
		&& -n "${max_temperature}" ]]; then
		echo "${current_array}""-""${current_disk}"" ""${current_temperature}"" ""${max_temperature}"
	fi
}

drive_regex='^\s*physicaldrive (([0-9a-zA-Z]+:)*[0-9a-zA-Z]+)$'
key_value_regex='^\s*[^:]*:'
curr_temp_regex='^\s*Current Temperature\s*\(C\):\s*([0-9]+)\s*$'
max_temp_regex='^\s*Maximum Temperature\s*\(C\):\s*([0-9]+)\s*$'

while read line; do

	# The current line refers to Array A, Array B...
	if [[ "${line}" =~ ^\s*Array\ [A-Z]\s*$ ]]; then
		print_current_drive
		reset_variables
		current_array="$(echo ${line} | awk '{print $2}')"

	# The current line refers to physicaldrive 
	elif echo "${line}" | grep -E "${drive_regex}" &>/dev/null; then
		print_current_drive
		current_disk="$(echo ${line} | sed -E "s/${drive_regex}/\1/")"
	# The current line refers to a key value pair

	elif echo "${line}" | grep -E "${key_value_regex}" &>/dev/null; then
		if echo "${line}" | grep -E "${curr_temp_regex}" &>/dev/null; then
			current_temperature="$(echo ${line} | sed -E "s/${curr_temp_regex}/\1/")"	
		fi
		if echo "${line}" | grep -E "${max_temp_regex}" &>/dev/null ; then
			max_temperature="$(echo ${line} | sed -E "s/${max_temp_regex}/\1/")"	
		fi
	fi
done < ~/ssa-input.txt
print_current_drive
